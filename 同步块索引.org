#+TITLE: 同步块索引

** 揭示同步块索引（上）：从lock开始
** https://www.cnblogs.com/yuyijq/archive/2009/03/13/1410071.html
** 作者：野狼hzx334
链接：https://www.zhihu.com/question/36842869/answer/148491893
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
** 结合CLR Via C# 和网上文章，引用类型对象的同步块索引有这么两个作用：
** lock当一个线程lock的时候（即 Monitor.Enter ），该线程会检查参数中的对象的同步块索引， 是否已经有关联的同步块。若没有， CLR就会在全局的SyncBlock数组里找到一个空闲的项，然后将数组的索引赋值给该对象的同步块索引。若存在，则通过同步块索引获取SyncBlock数组的项。然后， 该线程会设置SyncBlock里的内容，标识出已经有一个线程占用了。当有其他线程想lock时，会检查参数的SyncBlock里的内容，发现已经有线程占用了，其他线程就会等待。lock执行完，占用的线程就会释放SyncBlock，其他线程就可以使用了
** 2. GetHashCode（要说明下同步块索引在32位机器占用32位，高6位作为控制位，表示参与的操作，后26位的含义随着高6位的不同而不同。）GetHashCode时，先通过 ComputeHashCode 方法得出一个哈希值，然后将这个哈希值与其他几个值进行几次或操作，就得到了一个对象的GetHashCode方法返回给我们使用的值。其中参与或操作的一个值，就是同步块索引的后26位的值。而这时同步块索引的高6位代表的含义中就有表示这后26位值用于参加GetHashCode的含义
